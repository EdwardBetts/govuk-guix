#!/bin/sh

set -e

if [ ! -n "$BASH" ] ; then
    echo Please run $0 with bash;
    exit 1;
fi

export GUIX_PACKAGE_PATH="$PWD/.guix-package-path"

if [[ $# -eq 0 ]] ; then
    cat <<EOF
Usage: ./guix-pre-inst-env COMMAND ARG...

Run COMMAND in a pre-installation environment. This involves first
generating a Guix environment containing the version of Guix contained
within this repository. Then, using this version of Guix, create the
environment in which to use. Only environment variables that are
explicitly passed through are used.

This script will use GNU Guix from the Guix store, if you want to use
Guix from another location, use the ./pre-inst-env script instead.
EOF
    exit 1
fi

if [ -n "$GDS_GUIX_CUSTOM_XDG_CONFIG_HOME" ]
then
    # Use the custom guix if specified, as this might save some work
    # compiling guix later on?
    export XDG_CONFIG_HOME="$GDS_GUIX_CUSTOM_XDG_CONFIG_HOME"
fi

# Put the right version of guix on the path, and coreutils as env and
# cut are used by this script
GDS_GUIX_SEARCH_PATHS="$(guix environment --fallback --pure --ad-hoc coreutils guix-gds git --search-paths)"

eval "$GDS_GUIX_SEARCH_PATHS"

# To avoid $XDG_CONFIG_HOME/guix/latest from being used
export XDG_CONFIG_HOME="${GDS_GUIX_CUSTOM_XDG_CONFIG_HOME:-"/dev/null"}"

SEARCH_PATHS="$(guix environment --fallback --pure --ad-hoc bash coreutils less nss-certs guix-gds guile git --search-paths)"

INCLUDED_VARIABLES=(HOME USER LOGNAME DISPLAY TERM TZ PAGER)

for var in $(env -0 | tr -d '\n' | tr '\0' '\n' | cut -d '=' -f 1); do
    if [[ $var == GDS_GUIX* ]]
    then
       continue
    fi

    for var_to_skip in "${INCLUDED_VARIABLES[@]}"
    do
        if [ "$var" == "$var_to_skip" ]
        then
            continue 2
        fi
    done

    unset $var;
done

set -u

eval "$SEARCH_PATHS"

export GUIX_ENVIRONMENT="$(dirname $(dirname $(type -p guix)))"

export SSL_CERT_FILE="$GUIX_ENVIRONMENT/etc/ssl/certs/ca-certificates.crt"
export SSL_CERT_DIR="$GUIX_ENVIRONMENT/etc/ssl/certs"

export GIT_SSL_CAINFO="$SSL_CERT_FILE"

bash ./pre-inst-env "$@"
