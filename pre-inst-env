#!/bin/sh

if [[ $# -eq 0 ]] ; then
    cat <<EOF
Usage: ./pre-inst-env COMMAND ARG...

Run COMMAND in a pre-installation environment. This involves first
generating a Guix environment containing the version of Guix contained
within this repository. Then, using this version of Guix, create the
environment in which to use. Only environment variables that are
explicitly passed through are used.

This script will use GNU Guix from the Guix store, if you want to use
Guix from another location, use the ./pre-inst-env script instead.
EOF
    exit 1
fi

export GDS_GUIX_ROOT="$(dirname ${BASH_SOURCE[0]})"
export GUILE_LOAD_PATH="$GDS_GUIX_ROOT${GUILE_LOAD_PATH:+:}$GUILE_LOAD_PATH"
export GUIX_PACKAGE_PATH="$GDS_GUIX_ROOT/.guix-package-path${GUIX_PACKAGE_PATH:+:}$GUIX_PACKAGE_PATH"

# Strip the trailing slash, otherwise, this causes issues with the
# %patch-path in Guix.
GDS_GNU_GUIX_MODULE_PATH="${GDS_GNU_GUIX_MODULE_PATH%/}"

if [ -n "$GDS_GNU_GUIX_MODULE_PATH" ]; then
    if [ ! -d "$GDS_GNU_GUIX_MODULE_PATH" ]; then
        echo "error: pre-inst-env: GDS_GNU_GUIX_MODULE_PATH $GDS_GNU_GUIX_MODULE_PATH does not exist"
        exit 1
    fi

    export GUILE_LOAD_PATH="$GDS_GNU_GUIX_MODULE_PATH:$GUILE_LOAD_PATH"
    export GUILE_LOAD_COMPILED_PATH="$GDS_GNU_GUIX_MODULE_PATH:$GUILE_LOAD_COMPILED_PATH"
fi


# If this is being run as a script
if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
    "$@"
fi
